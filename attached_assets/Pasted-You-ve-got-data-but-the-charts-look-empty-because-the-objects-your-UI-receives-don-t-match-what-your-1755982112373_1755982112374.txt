You’ve got data—but the charts look empty because the objects your UI receives don’t match what your chart code expects.

What’s happening

Your client charts (e.g. MonthlyChartsSection, AnxietyChartsSection) expect analysis objects shaped like:

created_at (snake case)

triggers (array of strings)

anxietyLevel (number)

But your server returns the DB row as Drizzle camel-case + different field names:

createdAt (camel)

anxietyTriggers (array or sometimes a comma-joined string)

anxietyLevel (ok)

So when the UI does:

const date = new Date(analysis.created_at || new Date());
const triggers = analysis.triggers || [];


created_at and triggers are undefined, so:

dates collapse to “now” (or group oddly),

type-trend series have no triggers at all → the lines are at 0 / invisible,

the “session activity” bars still show (they only count items), which matches your screenshot (bars present, type-trend lines empty).

Quick fix I applied for you

I normalized the API response in one place so the rest of the UI can stay as-is.

Download and drop this file into your repo:

Patch: tranquiloo_v8_analytics_mapping_fix.zip
(contains the updated client/src/services/analyticsService.ts)

What the patch does inside getAnalyticsData():

// After JSON.parse(messageText)
messages = (Array.isArray(messages) ? messages : []).map((m:any) => ({
  ...m,
  created_at: m.created_at ?? m.createdAt ?? new Date().toISOString()
}));

// After JSON.parse(analysisText)
anxietyAnalyses = (Array.isArray(anxietyAnalyses) ? anxietyAnalyses : []).map((a:any) => ({
  anxietyLevel: a.anxietyLevel ?? a.anxiety_level ?? 0,
  gad7Score: Math.max(0, Math.min(21, (a.anxietyLevel ?? a.anxiety_level ?? 0) * 2.1)),
  // map DB fields -> UI fields
  beckAnxietyCategories: a.anxietyTriggers ?? a.triggers ?? [],
  dsm5Indicators:         a.anxietyTriggers ?? a.triggers ?? [],
  triggers: Array.isArray(a.anxietyTriggers)
              ? a.anxietyTriggers
              : (typeof a.anxietyTriggers === 'string'
                  ? a.anxietyTriggers.split(',').map((s:string)=>s.trim()).filter(Boolean)
                  : (Array.isArray(a.triggers)
                      ? a.triggers
                      : (typeof a.triggers === 'string'
                          ? a.triggers.split(',').map((s:string)=>s.trim()).filter(Boolean)
                          : []))),
  cognitiveDistortions: a.cognitiveDistortions ?? [],
  recommendedInterventions: a.recommendedInterventions ?? [],
  therapyApproach: a.therapyApproach ?? 'CBT',
  crisisRiskLevel: a.crisisRiskLevel ?? 'low',
  sentiment: a.sentiment ?? 'neutral',
  escalationDetected: a.escalationDetected ?? false,
  personalizedResponse: a.personalizedResponse ?? a.response ?? '',
  confidenceScore: Number.isFinite(a.confidenceScore) ? a.confidenceScore : 0.7,
  responseEffectiveness: a.responseEffectiveness ?? 0,
  created_at: a.created_at ?? a.createdAt ?? new Date().toISOString(),
}));


This makes created_at and triggers always present in the right shape for your charts.

Other things to double-check (these commonly bite during seeding)

Wrong user ID

The analytics API calls are GET /api/users/:userId/messages and GET /api/users/:userId/anxiety-analyses.

Make sure the fake rows for “Sara Fernandez” use the currently logged-in user’s profiles.id. If they were inserted with some other ID, your charts for the logged-in account will still show empty.

Dates outside the view

Weekly charts only show the last 7 days (via your weekly helper). If the fake data sits in June/July and today is August, weekly lines will be empty while monthly bars show. That’s consistent with your screenshots.

Triggers stored as one string

If the seed inserted "work, social, health" into anxiety_triggers (text, not text[]), the patch now splits it on commas; before that, it yielded no triggers → empty type series.

How to verify quickly

Open the browser Network tab on /analytics:

Confirm GET /api/users/<id>/anxiety-analyses returns objects that now contain created_at and triggers (post-patch).

Seed a minimal row manually to be sure:

# Make sure userId matches the one in localStorage/profile
POST /api/anxiety-analyses
{
  "userId": "<CURRENT_USER_ID>",
  "anxietyLevel": 7,
  "anxietyTriggers": ["work", "relationships"],
  "personalizedResponse": "…"
}


Reload analytics. You should see the weekly and monthly “type” lines move.

If you still see empties:

Log inside MonthlyChartsSection.processMonthlyData() to print a couple of analysis items and verify triggers and created_at are populated (the component already logs counts).

Why your bars showed but lines didn’t

Monthly Session Activity uses sessionCount only → data existed, so bars rendered.

Monthly Anxiety Type Trends and Weekly Anxiety Type Trends require triggers to bucket into categories → with missing/mismatched triggers, the averages were 0, so the lines looked blank.

Once you drop the patch in, your charts should populate with the seeded data for Sara. If you want, I can also add a tiny runtime guard that maps createdAt/anxietyTriggers → created_at/triggers right inside the chart components as a fallback, but normalizing at the service layer (as above) is the cleanest fix.