You’re still getting the crash because the Therapist → Patient → Analytics view is rendering a list on fields that are sometimes missing or not arrays (some seed rows use key_points / strings, others use keyPoints / arrays). When one of those summaries lacks the expected array, the component does:

summary.key_points.map(...)   // or similar


…and Vite throws “Cannot read properties of undefined (reading 'map')”.

I inspected your latest upload (v9) and found the problem in:

client/src/components/analytics/InterventionSummariesSection.tsx


Although parts had guards, several paths could still surface undefined or string values (comma-joined) for keyPoints, recommendations, and limitations, and there were a couple of .map chains that didn’t defensively cast the container to an array.

What I changed (ready to drop in)

1) Component hardening (guards + normalization in the view):
Download and replace this file in your repo:

InterventionSummariesSection.tsx patch
tranquiloo_v9_intervention_summaries_hardening.zip

Changes:

Guard every Object.entries(X) with X ?? {}.

Ensure interventionSummaries is an array before mapping.

Normalize list fields inline so strings like "breathing, journaling" become ["breathing","journaling"]:

{(Array.isArray((summary as any)?.keyPoints)
    ? (summary as any).keyPoints
    : Array.isArray((summary as any)?.key_points)
    ? (summary as any).key_points
    : typeof (summary as any)?.keyPoints === 'string'
    ? (summary as any).keyPoints.split(',').map(s=>s.trim()).filter(Boolean)
    : typeof (summary as any)?.key_points === 'string'
    ? (summary as any).key_points.split(',').map(s=>s.trim()).filter(Boolean)
    : []
).map(...)}


Same pattern applied to recommendations, limitations, and explanation.followUpInstructions.

2) Normalize summaries at the data boundary (Therapist Portal):
So every consumer gets a consistent shape.

TherapistPortal.tsx patch
tranquiloo_v9_portal_summary_normalization.zip

What it adds:

const normalizeSummary = (s: any) => ({
  ...s,
  week_start: s.week_start ?? s.weekStart ?? new Date().toISOString(),
  key_points: Array.isArray(s.key_points) ? s.key_points
            : Array.isArray(s.keyPoints) ? s.keyPoints
            : typeof s.key_points === 'string' ? s.key_points.split(',').map(t=>t.trim()).filter(Boolean)
            : typeof s.keyPoints === 'string' ? s.keyPoints.split(',').map(t=>t.trim()).filter(Boolean)
            : [],
  recommendations: Array.isArray(s.recommendations) ? s.recommendations
                 : typeof s.recommendations === 'string' ? s.recommendations.split(',').map(t=>t.trim()).filter(Boolean)
                 : [],
  limitations: Array.isArray(s.limitations) ? s.limitations
            : typeof s.limitations === 'string' ? s.limitations.split(',').map(t=>t.trim()).filter(Boolean)
            : [],
});

// and then:
setSummaries((summariesResult.data ?? []).map(normalizeSummary));

Why you still saw the same error

Some patient summaries were saved with snake_case keys and/or string lists (comma-joined).

When the therapist switched to that patient’s analytics, the component hit .map on a non-array field and crashed the whole view.

After you drop these in

Stop and restart your dev server (to clear Vite’s HMR overlay and any stale bundle).

Reopen the same patient → Analytics. The page should render with no overlay, even if some fields are missing or are strings.

(Optional) clean up your seeded data

If you have existing rows with string lists, consider migrating them to arrays so you don’t rely on client-side coercion:

SQL (Postgres/Supabase-ish):

-- Convert comma-joined text to text[] for key_points/recommendations/limitations
UPDATE intervention_summaries
SET key_points = string_to_array(key_points, ',')
WHERE jsonb_typeof(to_jsonb(key_points)) = 'string';

UPDATE intervention_summaries
SET recommendations = string_to_array(recommendations, ',')
WHERE jsonb_typeof(to_jsonb(recommendations)) = 'string';

UPDATE intervention_summaries
SET limitations = string_to_array(limitations, ',')
WHERE jsonb_typeof(to_jsonb(limitations)) = 'string';


Or make sure your seeding script writes arrays consistently:

key_points: ["Breathing exercises", "Journaling"],
recommendations: ["Try CBT thought record", "Mindful walk 10m"],
limitations: ["Limited sleep this week"],


If anything still trips the overlay after these patches, send me the new line shown in the stack (file + line number) and I’ll harden that path as well.